name: dev-env-init
on: [push]

jobs:
  pipeline:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
    steps:
      - uses: actions/checkout@v1
      - uses: actions/checkout@v2
        with:
          repository: 'pyfony/console-bundle'
          path: 'console-bundle'
          ref: 'e307e491b6984bd6065a9aca061a4a3da6948a95'
      - uses: goanpeca/setup-miniconda@v1.1.2
        with:
          miniconda-version: '4.7.12'
      - name: Update PATH
        shell: bash -l {0}
        run: echo "::add-path::/c/Miniconda3/Scripts"
      - name: Init
        run: |
          cd console-bundle
          ENV_INIT_BRANCH=${GITHUB_REF:11} ./env-init.sh
          eval "$(conda shell.bash hook)"
          conda activate "$PWD/.venv"
          ./run_tests.sh
          ./pylint.sh
          echo "******* 2nd env-init.sh invocation *******"
          source $HOME/.poetry/env
          poetry add exponea-python-sdk="0.1.*"
          pip uninstall -y exponea-python-sdk
          ENV_INIT_BRANCH=${GITHUB_REF:11} ./env-init.sh
          ./run_tests.sh
          echo "********* .bashrc modifications **********"
          if ! grep -q "pyfony_env.sh" "$HOME/.bashrc"; then
              echo "pyfony_env.sh was not added to .bashrc"
              exit 1
          fi
          if [[ ! -f "$HOME/pyfony_env.sh" ]]; then
              echo "pyfony_env.sh was not created"
              exit 1
          fi

  package-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/checkout@v2
        with:
          repository: 'pyfony/console-bundle'
          path: 'console-bundle'
          ref: 'e307e491b6984bd6065a9aca061a4a3da6948a95'
      - uses: goanpeca/setup-miniconda@v1.1.2
        with:
          miniconda-version: '4.7.12'
      - name: Update PATH
        shell: bash -l {0}
        run: echo "::add-path::/c/Miniconda3/Scripts"
      - name: Init
        run: |
          cd console-bundle
          ENV_INIT_BRANCH=${GITHUB_REF:11} ./env-init.sh
          conda activate "$PWD/.venv"
          ./run_tests.sh
          ./pylint.sh
          echo "******* 2nd env-init.sh invocation *******"
          PATH=$HOME/.poetry/bin:$PATH
          poetry add exponea-python-sdk="0.1.*"
          pip uninstall -y exponea-python-sdk
          ENV_INIT_BRANCH=${GITHUB_REF:11} ./env-init.sh
          ./run_tests.sh
          echo "********* .bashrc modifications **********"
          if ! grep -q "pyfony_env.sh" "$HOME/.bashrc"; then
              echo "pyfony_env.sh was not added to .bashrc"
              exit 1
          fi
          if [[ ! -f "$HOME/pyfony_env.sh" ]]; then
              echo "pyfony_env.sh was not created"
              exit 1
          fi
        shell: sh {0}

  package-windows-condaNotOnPath:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/checkout@v2
        with:
          repository: 'pyfony/console-bundle'
          path: 'console-bundle'
          ref: 'e307e491b6984bd6065a9aca061a4a3da6948a95'
      - name: Conda installation
        run: |
          powershell -Command "Invoke-WebRequest https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Windows-x86_64.exe -OutFile Miniconda3-latest-Windows-x86_64.exe"
          start /wait "" Miniconda3-latest-Windows-x86_64.exe /InstallationType=JustMe /AddToPath=0 /RegisterPython=1 /S /D=%UserProfile%\Miniconda3
        shell: cmd
      - name: Init
        run: |
          cd console-bundle
          ENV_INIT_BRANCH=${GITHUB_REF:11} ./env-init.sh
          conda activate "$PWD/.venv"
          ./run_tests.sh
          ./pylint.sh
          echo "******* 2nd env-init.sh invocation *******"
          PATH=$HOME/.poetry/bin:$PATH
          poetry add exponea-python-sdk="0.1.*"
          pip uninstall -y exponea-python-sdk
          ENV_INIT_BRANCH=${GITHUB_REF:11} ./env-init.sh
          ./run_tests.sh
          echo "********* .bashrc modifications **********"
          if ! grep -q "pyfony_env.sh" "$HOME/.bashrc"; then
              echo "pyfony_env.sh was not added to .bashrc"
              exit 1
          fi
          if [[ ! -f "$HOME/pyfony_env.sh" ]]; then
              echo "pyfony_env.sh was not created"
              exit 1
          fi
        shell: sh {0}
